<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.iw2fag.lab</groupId>
    <artifactId>skeleton</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>skeleton source</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.5.RELEASE</version>
    </parent>

    <properties>
        <build.version>00-SNAPSHOT</build.version>
        <project.root>${project.basedir}</project.root>
        <component.version>LOCAL_BUILD</component.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <base.version>${project.version}</base.version>
        <java.version>1.8</java.version>
        <jetty.version>9.2.10.v20150310</jetty.version>
        <spring.boot.version>1.3.5.RELEASE</spring.boot.version>
        <spring.version>4.2.6.RELEASE</spring.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.4.1</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>compile</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.13</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.jvnet.maven-antrun-extended-plugin</groupId>
                    <artifactId>maven-antrun-extended-plugin</artifactId>
                    <version>1.43</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addClasspath>false</addClasspath>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Build>${git.commit.id.abbrev}</Implementation-Build>
                                <Build-Number>${build.number}</Build-Number>
                                <Build-Info>${git.commit.id.describe}</Build-Info>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Build>${git.commit.id.abbrev}</Implementation-Build>
                                <Build-Number>${build.number}</Build-Number>
                                <Build-Info>${git.commit.id.describe}</Build-Info>
                            </manifestEntries>
                        </archive>
                    </configuration>
                    <executions>
                        <!-- Execution details... -->
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.5</version>
                </plugin>

                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>2.1.13</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <!-- that's the default value, you don't have to set it -->
                        <prefix>git</prefix>
                        <!-- that's the default value -->
                        <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                        <!-- when true, it prints some more information during the build -->
                        <verbose>false</verbose>
                        <!--
                            If you'd like to tell the plugin where your .git directory is,
                            use this setting, otherwise we'll perform a search trying to
                            figure out the right directory. It's better to add it explicite IMHO.
                        -->
                        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                        <!-- ALTERNATE SETUP - GENERATE FILE -->
                        <!--
                            If you want to keep git information, even in your WAR file etc,
                            use this mode, which will generate a properties file (with filled out values)
                            which you can then normally read using new Properties().load(/**/)
                        -->
                        <!--
                            this is true by default; You may want to set this to false, if the plugin should run inside a
                            <packaging>pom</packaging> project. Most projects won't need to override this property.

                            For an use-case for this kind of behaviour see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21
                        -->
                        <skipPoms>true</skipPoms>
                        <!-- this is false by default, forces the plugin to generate the git.properties file -->
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <!-- The path for the to be generated properties file, it's relative to ${project.basedir} -->
                        <!--<generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>-->
                        <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
                        <!-- true by default, controls whether the plugin will fail when no .git directory is found, when set to false the plugin will just skip execution -->
                        <!-- @since 2.0.4 -->
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <!-- @since 2.1.0 -->
                        <!--
                            read up about git-describe on the in man, or it's homepage - it's a really powerful versioning helper
                            and the recommended way to use git-commit-id-plugin. The configuration bellow is optional,
                            by default describe will run "just like git-describe on the command line", even though it's a JGit reimplementation.
                        -->
                        <excludeProperties>
                            <excludeProperty>git.build.user.*</excludeProperty>
                            <excludeProperty>git.*.*.email</excludeProperty>
                            <excludeProperty>git.commit.user.*</excludeProperty>
                            <excludeProperty>git.build.user.email</excludeProperty>
                            <excludeProperty>git.remote.origin.url</excludeProperty>
                            <excludeProperty>git.commit.message.*</excludeProperty>
                            <!--<excludeProperty>git.build.time</excludeProperty>-->
                        </excludeProperties>
                        <gitDescribe>
                            <!-- don't generate the describe property -->
                            <skip>false</skip>
                            <!--
                                if no tag was found "near" this commit, just print the commit's id instead,
                                helpful when you always expect this field to be not-empty
                            -->
                            <always>false</always>
                            <!--
                                 how many chars should be displayed as the commit object id?
                                 7 is git's default,
                                 0 has a special meaning (see end of this README.md),
                                 and 40 is the maximum value here
                            -->
                            <abbrev>7</abbrev>
                            <!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
                            <dirty>-dirty</dirty>
                            <!--
                                 always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag.
                                 The distance will always be 0 if you're "on" the tag.
                            -->
                            <forceLongFormat>false</forceLongFormat>

                        </gitDescribe>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.18.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>internal-modules</module>
                <module>service</module>
            </modules>
        </profile>

        <profile>
            <id>docker</id>
            <modules>
                <module>internal-modules</module>
                <module>service</module>
            </modules>
        </profile>

        <profile>
            <id>docker-service</id>
            <modules>
                <module>internal-modules</module>
                <module>service</module>
            </modules>
        </profile>

        <profile>
            <id>k8s</id>
            <modules>
                <module>deployment</module>
            </modules>
        </profile>

    </profiles>



</project>
